<?php

namespace App\Tests\Unit\Service\Twig;

use App\Service\Twig\AppExtension;
use Behat\Transliterator\Transliterator;
use Doctrine\ORM\EntityManagerInterface;
use PHPUnit\Framework\TestCase;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
use Symfony\Component\HttpFoundation\Session\SessionInterface;
use Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Symfony\Component\Console\Tester\CommandTester;
use Twig\Extension\AbstractExtension;

class AppExtensionTest extends KernelTestCase
{

    public $serviceMock;
    public $tokenMock;
    public $sessionMock;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        // Below, avoid : too much mocking is not good with constructors...
//        $this->serviceMock = $this->createMock('Doctrine\ORM\EntityManagerInterface');
//        $this->tokenMock = $this->createMock('Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface');
//        $this->sessionMock = $this->createMock('Symfony\Component\HttpFoundation\Session\SessionInterface');
    }

    public function testGetAppExtension()
    {

        /** Test constructor
         */
        //$appExtension = new AppExtension(EntityManagerInterface::class, TokenStorageInterface::class, SessionInterface::class);

        $appExtension = $this->createMock(AppExtension::class);

        $this->assertInstanceOf(AppExtension::class, $appExtension);

    }

    public function testGetTwigFilter() {
        self::bootKernel();

        $container = self::$kernel->getContainer();
        $container = self::$container;

        $twigFilters = self::$container->get('twig.extension.intl')->getFilters();

        $this->assertNotNull($twigFilters);

    }

}